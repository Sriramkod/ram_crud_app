name: Build and Deploy Spring Boot Project

on:
  push:
    branches:
      - main  # Trigger this workflow on push to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Use the version you need
          distribution: 'zulu'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package --file crud-api/pom.xml

      - name: Upload JAR as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: crud-api-ram-jar
          path: crud-api/target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Make sure deploy only runs after build completes

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: crud-api-ram-jar
          path: ./  # Download artifact to the current directory

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/ramkey
          chmod 600 ~/.ssh/ramkey
          ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/ramkey ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd ~/ram_crud_app
          # Kill the old running app if any
          pkill -f 'java -jar'
          # Deploy the new JAR file
          nohup java -jar crud-api-ram-jar > app.log 2>&1 &
          EOF
